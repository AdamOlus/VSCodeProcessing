/* autogenerated by Processing revision 1276 on 2023-02-09 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class VSCodeProcessing extends PApplet {

float x;
ArrayList<RandomCircle> circles;
 public void setup() {
    /* size commented out by preprocessor */;
    x =-  50;
    circles = new ArrayList<RandomCircle>();
}

 public void draw() {
    background(0);
    fill(0,255,0);
    ellipse(x,300,100,100);
    x += 10;
    if (x >= width + 50) {
        x = -50;
    }
    
    for (int i = circles.size() - 1;i>= 0;i--) {
        circles.get(i).display();
    }
}

 public void mouseReleased() {
    if (mouseButton == LEFT) {
        circles.add(new RandomCircle(width, height));
    }
    if (mouseButton == RIGHT) {
        if (circles.size() > 0) {
            circles.remove(0);
        }
    }
}
class RandomCircle {
    float xPos, yPos, w, h;

    RandomCircle(float screenW, float screenH) {
        w = random(10, 200);
        h = w;
        xPos = random(w, screenW-w);
        yPos = random(h, screenH-h);
    }

     public void display() {
        fill(255,155,50);
        ellipse(xPos, yPos, w, h);
    }
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "VSCodeProcessing" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
